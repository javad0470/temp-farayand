<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style TargetType="Button"
           x:Key="ImagebtnStyle">
        <Setter Property="OverridesDefaultStyle"
                Value="False" />

        <Setter Property="Cursor"
                Value="Hand" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button"
           x:Key="emptyBtnStyle">
        <Setter Property="OverridesDefaultStyle"
                Value="False" />

        <Setter Property="Cursor"
                Value="Hand" />


        <Setter Property="BorderThickness"
                Value="0" />


        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />

                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonFocusVisual">

        <Setter Property="Control.Template">

            <Setter.Value>

                <ControlTemplate>

                    <Rectangle Margin="2"
                               SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeThickness="1"
                               StrokeDashArray="1 2" />

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>


    <Style x:Key="YesBtnStyle"
           TargetType="{x:Type Button}">

        <Setter Property="Cursor"
                Value="Hand"></Setter>

        <Setter Property="Height"
                Value="30"></Setter>

        <Setter Property="Width"
                Value="60"></Setter>

        <Setter Property="Margin"
                Value="0,0,100,0"></Setter>

        <Setter Property="Foreground"
                Value="White"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Width="{TemplateBinding Width}"
                          TextElement.Foreground="{DynamicResource appClr2}"
                          Height="{TemplateBinding Height}">
                        <Ellipse Fill="White">

                        </Ellipse>
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CommonBtnStyle"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource ImagebtnStyle}">

        <Setter Property="MaxHeight"
                Value="30"></Setter>
        <Setter Property="MaxWidth"
                Value="30"></Setter>

        <!--<Setter Property="Background"
                Value="{DynamicResource ButtonBackground}" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Foreground"
                Value="Black" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Width"
                Value="30"></Setter>
        <Setter Property="Height"
                Value="30"></Setter>
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Setter.Value>
        </Setter>

        <Setter Property="Cursor"
                Value="Hand"></Setter>

        <Setter Property="FlowDirection"
                Value="LeftToRight"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="elps"
                                Height="{TemplateBinding Height}"
                                Width="{TemplateBinding Width}"
                                CornerRadius="5"
                                Background="{TemplateBinding Background}"
                                BorderThickness="0"></Border>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="0"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>

            <EventTrigger RoutedEvent="Button.MouseEnter">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                            From="#FF07ACEA"
                                            To="#FF0487B8"
                                            Duration="0:0:0"
                                            AutoReverse="False" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>

            <EventTrigger RoutedEvent="Button.MouseLeave">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                            From="#FF0487B8"
                                            To="#FF07ACEA"
                                            Duration="0:0:0"
                                            AutoReverse="False" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>

            <DataTrigger Binding="{Binding Path=IsEnabled}"
                         Value="False">

                <Setter Property="Background"
                        Value="Gray"></Setter>

            </DataTrigger>

            <DataTrigger Binding="{Binding Path=IsEnabled}"
                         Value="True">

                <Setter Property="Background"
                        Value="{DynamicResource ButtonBackground}"></Setter>

            </DataTrigger>

        </Style.Triggers>-->

    </Style>

    <!--button for flags in process display page-->
    <Style x:Key="FlagBtnStyle"
           TargetType="{x:Type Button}">

        <Setter Property="Background"
                Value="Transparent"></Setter>

        <Setter Property="Cursor"
                Value="Hand"></Setter>

        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Width"
                Value="30"></Setter>
        <Setter Property="Height"
                Value="30"></Setter>
        <Setter Property="FlowDirection"
                Value="LeftToRight"></Setter>

    </Style>

    <!--button for menu-->
    <Style x:Key="MenuBtnBorderStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Setter.Value>
        </Setter>
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="FlowDirection"
                Value="LeftToRight"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}"
                          x:Name="grd">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="0"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="grd"
                                    Value="{DynamicResource appClr2}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--button for menu in the toggle-->
    <Style x:Key="MenuBtnInToggleBorderStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Margin"
                Value="3,0" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Setter.Value>
        </Setter>
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="FlowDirection"
                Value="LeftToRight"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="White"
                          x:Name="grd">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="0"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="grd"
                                    Value="{DynamicResource appClr2}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="ComeToMnuBtnStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource color12}" />
        <Setter Property="Height"
                Value="40" />
        <Setter Property="Width"
                Value="40" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Foreground"
                Value="{DynamicResource color11}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Setter.Value>
        </Setter>

        <Setter Property="Cursor"
                Value="Hand"></Setter>

        <Setter Property="FlowDirection"
                Value="LeftToRight"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <!--<Border x:Name="elps"
                                Height="{TemplateBinding Height}"
                                Width="{TemplateBinding Width}"
                                CornerRadius="5"
                                Background="{TemplateBinding Background}"
                                BorderThickness="1"></Border>-->
                        <Ellipse x:Name="elps"
                                 Height="{TemplateBinding Height}"
                                 Width="{TemplateBinding Width}"
                                 Fill="{TemplateBinding Background}"></Ellipse>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="0"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>


    </Style>

    <Style TargetType="Button"
           BasedOn="{StaticResource MenuBtnBorderStyle}"
           x:Key="MainMenuButonStyle">

        <Setter Property="Margin"
                Value="10" />

        <Setter Property="Width"
                Value="120" />

        <Setter Property="Height"
                Value="120" />
    </Style>

</ResourceDictionary>