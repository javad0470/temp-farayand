<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:params="http://schemas.codeplex.com/elysium/params"
                    xmlns:metro="http://schemas.codeplex.com/elysium">

    <Style x:Key="ButtonFocusVisual">

        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2"
                               SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeThickness="1"
                               StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <SolidColorBrush x:Key="ButtonNormalBorder"
                     Color="Transparent" />

    <!--<Style TargetType="{x:Type ToggleButton}">

    </Style>-->

    <Style x:Key="tgglBtnPosPst"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Background"
                Value="{DynamicResource MenuButtonBackground}" />
        <Setter Property="Margin"
                Value="0,0,10,0" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource MenuButtonBackground}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Setter.Value>
        </Setter>

        <Setter Property="Cursor"
                Value="Hand" />

        <Setter Property="FlowDirection"
                Value="LeftToRight" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border x:Name="elps"
                                Height="{TemplateBinding Height}"
                                Width="{TemplateBinding Width}"
                                CornerRadius="5"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="1" />
                        <!--<Ellipse x:Name="elps"
                                 Height="{TemplateBinding Height}"
                                 Width="{TemplateBinding Width}"
                                 Fill="{TemplateBinding Background}"></Ellipse>-->
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="0"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>

            <Trigger Property="IsMouseOver"
                     Value="True">

                <Setter Property="Margin"
                        Value="5" />

                <Setter Property="Foreground"
                        Value="White" />

                <Setter Property="Background"
                        Value="{DynamicResource MenuHover}" />
            </Trigger>

        </Style.Triggers>

    </Style>

    <Style x:Key="ToggleButton01"
           TargetType="{x:Type ToggleButton}">

        <Setter Property="FocusVisualStyle"
                Value="{StaticResource ButtonFocusVisual}" />

        <Setter Property="Background"
                Value="Transparent" />

        <Setter Property="Cursor"
                Value="Hand" />

        <Setter Property="BorderBrush"
                Value="{StaticResource ButtonNormalBorder}" />

        <Setter Property="BorderThickness"
                Value="0" />

        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />

        <Setter Property="HorizontalContentAlignment"
                Value="Center" />

        <Setter Property="VerticalContentAlignment"
                Value="Center" />

        <Setter Property="Padding"
                Value="0" />

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type ToggleButton}">

                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsKeyboardFocused"
                                 Value="true">

                            <!--<Setter Property="RenderDefaulted"
                                    TargetName="Chrome"
                                    Value="true" />-->

                        </Trigger>

                        <Trigger Property="IsChecked"
                                 Value="true">

                            <!--<Setter Property="RenderPressed"
                                    TargetName="Chrome"
                                    Value="true" />-->

                        </Trigger>

                        <Trigger Property="IsEnabled"
                                 Value="false">

                            <!--<Setter Property="Foreground"
                                    Value="#ADADAD" />-->

                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>

    <!--Toggle for menu-->
    <Style x:Key="MenuToggleBtnBorderStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Background"
                Value="{DynamicResource appClr1}" />
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Setter.Value>
        </Setter>
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="FlowDirection"
                Value="LeftToRight" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="grd"
                          Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="0"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="grd"
                                    Value="{DynamicResource appClr2}"></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="grd"
                                    Property="Background"
                                    Value="{DynamicResource appClr2}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuToggleBtnBorderTransParentStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Margin"
                Value="0,0,10,0" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource appClr1}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Setter.Value>
        </Setter>

        <Setter Property="Cursor"
                Value="Hand" />

        <Setter Property="FlowDirection"
                Value="LeftToRight" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource MenuButtonBackground}" />
                            </Style>
                        </Grid.Resources>
                        <Border x:Name="elps"
                                Height="{TemplateBinding Height}"
                                Width="{TemplateBinding Width}"
                                CornerRadius="5"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="0" />
                        <!--<Ellipse x:Name="elps"
                                 Height="{TemplateBinding Height}"
                                 Width="{TemplateBinding Width}"
                                 Fill="{TemplateBinding Background}"></Ellipse>-->
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="0"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!--<Style.Triggers>

            <Trigger Property="IsMouseOver"
                     Value="True">

                <Setter Property="Margin"
                        Value="5"/>

                <Setter Property="Foreground"
                        Value="White"/>

                <Setter Property="Background"
                        Value="{DynamicResource color08}"></Setter>

            </Trigger>

            <Trigger Property="IsChecked"
                     Value="True">

                <Setter Property="Margin"
                        Value="5"/>

                <Setter Property="Foreground"
                        Value="White"/>

            </Trigger>

        </Style.Triggers>-->

    </Style>

    <Style x:Key="ToggleButtonStyle1"
           TargetType="{x:Type ToggleButton}">
        <Style.BasedOn>
            <Style TargetType="{x:Type ButtonBase}">
                <Setter Property="Background"
                        Value="#FF017BCD" />
                <Setter Property="BorderBrush"
                        Value="#FF017BCD" />
                <Setter Property="BorderThickness"
                        Value="{Binding (params:General.DefaultThickness), Mode=OneWay, RelativeSource={RelativeSource Self}}" />
                <Setter Property="Foreground"
                        Value="White" />
                <Setter Property="FontSize"
                        Value="{Binding (params:General.ContentFontSize), Mode=OneWay, RelativeSource={RelativeSource Self}}" />
                <Setter Property="FontStretch"
                        Value="Normal" />
                <Setter Property="FontStyle"
                        Value="Normal" />
                <Setter Property="FontWeight"
                        Value="SemiBold" />
                <Setter Property="TextOptions.TextFormattingMode"
                        Value="Display" />
                <Setter Property="TextOptions.TextRenderingMode"
                        Value="ClearType" />
                <Setter Property="RenderOptions.ClearTypeHint"
                        Value="Enabled" />
                <Setter Property="Focusable"
                        Value="True" />
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle RenderOptions.EdgeMode="Aliased"
                                                   Margin="{TemplateBinding params:General.DefaultPadding}"
                                                   Stroke="Black"
                                                   StrokeThickness="{TemplateBinding params:General.DefaultThicknessValue}"
                                                   StrokeDashArray="2 1" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="HorizontalContentAlignment"
                        Value="Center" />
                <Setter Property="VerticalContentAlignment"
                        Value="Center" />
                <Setter Property="Padding"
                        Value="{Binding (params:General.BoldPadding), Mode=OneWay, RelativeSource={RelativeSource Self}}" />
                <Setter Property="MinWidth"
                        Value="70" />
                <Setter Property="SnapsToDevicePixels"
                        Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}"
                                    TextElement.Foreground="{TemplateBinding Foreground}"
                                    TextElement.FontWeight="{TemplateBinding FontWeight}"
                                    TextElement.FontStyle="{TemplateBinding FontStyle}"
                                    TextElement.FontStretch="{TemplateBinding FontStretch}"
                                    TextElement.FontSize="{TemplateBinding FontSize}"
                                    TextElement.FontFamily="{TemplateBinding FontFamily}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    TextOptions.TextRenderingMode="{TemplateBinding TextOptions.TextRenderingMode}"
                                    TextOptions.TextFormattingMode="{TemplateBinding TextOptions.TextFormattingMode}">
                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}"
                                                  RecognizesAccessKey="True"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger>
                        <DataTrigger.Binding>
                            <Binding ConverterParameter="18"
                                     Mode="OneWay"
                                     Path="FontSize"
                                     RelativeSource="{RelativeSource Self}">
                                <Binding.Converter>
                                    <metro:IsGreaterThanConverter />
                                </Binding.Converter>
                            </Binding>
                        </DataTrigger.Binding>
                        <Setter Property="TextOptions.TextFormattingMode"
                                Value="Ideal" />
                    </DataTrigger>
                    <Trigger Property="IsMouseOver"
                             Value="True">
                        <Setter Property="Background"
                                Value="Black" />
                        <Setter Property="BorderBrush"
                                Value="Black" />
                        <Setter Property="Foreground"
                                Value="White" />
                    </Trigger>
                    <Trigger Property="IsPressed"
                             Value="True">
                        <Setter Property="Background"
                                Value="#FF4D4D4D" />
                        <Setter Property="BorderBrush"
                                Value="#FF4D4D4D" />
                        <Setter Property="Foreground"
                                Value="White" />
                    </Trigger>
                    <Trigger Property="IsEnabled"
                             Value="False">
                        <Setter Property="Background"
                                Value="#FFB8B5B2" />
                        <Setter Property="BorderBrush"
                                Value="#FFB8B5B2" />
                        <Setter Property="Foreground"
                                Value="White" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.BasedOn>
        <Style.Triggers>
            <Trigger Property="IsChecked"
                     Value="True">
                <Setter Property="Background"
                        Value="#FF4D4D4D" />
                <Setter Property="BorderBrush"
                        Value="#FF4D4D4D" />
                <Setter Property="Foreground"
                        Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>